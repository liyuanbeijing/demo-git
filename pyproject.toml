[tool.poetry]
name = "sidesail"
version = "0.1.0"
description = "django-ninja and prefect workflow, no more django-admin"
authors = ["liyuan <lyuan01@cfid.cn>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
Django = "^5.1"
django-ninja = "^1.3.0"
django-ninja-extra = "^0.21.4"
django-unfold = "^0.40.0"
django-extensions = "^3.2.3"
django-import-export = "^4.2.0"
psycopg = { extras = ["binary"], version = "^3.2.1" }
paramiko = "^3.4.1"
loguru = "^0.7.2"
pydantic = "^2.8.2"
pandas = "^2.2.2"
icecream = "^2.1.3"
httpx = "^0.27.0"
prefect = "^3.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-django = "^4.8.0"
pytest-httpx = "^0.30.0"
pytest-asyncio = "^0.17.0"
mypy = "^1.11.1"
pandas-stubs = "^2.2.2.240807"
types-paramiko = "^3.4.0.20240423"
ruff = "^0.7.1"
ipython = "^8.29.0"
django-stubs = { extras = ["compatible-mypy"], version = "^5.1.1" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--capture=no --color=yes"
DJANGO_SETTINGS_MODULE = "sidesail.settings"
python_files = ["tests.py", "test_*.py"]
pythonpath = ["src"]
testpaths = ["src/tests", "tests"]

filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:.*will be removed in Django 6.0.*:Warning",
]

[tool.mypy]
python_version = "3.12"
plugins = ["mypy_django_plugin.main"]
# files = ["src"]
mypy_path = ["src"]
# warn_return_any = true
# warn_unused_configs = true
explicit_package_bases = true
namespace_packages = true
check_untyped_defs = true
disable_error_code = ["import-untyped"]
exclude = ['deployment/*', 'components/huawei_oceanstor/*']

[tool.django-stubs]
django_settings_module = "sidesail.settings"
# ignore_missing_settings = true
# ignore_missing_model_attributes = true

[tool.ruff]
# fix = true
line-length = 88
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
lint.ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "I001", # isort: import not formatted correctly
]
exclude = ["**/migrations", ".env", ".venv"]
